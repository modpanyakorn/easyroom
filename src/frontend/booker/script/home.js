function toggleMobileMenu() {
  const menu = document.getElementById("mobilePopupMenu");
  menu.style.display = menu.style.display === "flex" ? "none" : "flex";
}

window.addEventListener("click", function (e) {
  const menu = document.getElementById("mobilePopupMenu");
  const button = document.querySelector(".menu-toggle");
  if (!menu.contains(e.target) && !button.contains(e.target)) {
    menu.style.display = "none";
  }
});

async function fetchUserInfo() {
  try {
    const response = await fetch(`${API_URL}/auth/session`, {
      method: "GET",
      credentials: "include",
    });
    if (!response.ok) {
      throw new Error("Session expired");
    }
    const userSession = await response.json();
    console.log("üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", userSession);
    if (!userSession.data) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
      window.location.href = "../../index.html";
      return;
    }
    document.getElementById("student-name").textContent =
      userSession.data.full_name;
    document.getElementById("student-id").textContent =
      userSession.data.user_id;
    if (userSession.role === "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï") {
      document.getElementById("stud-year").textContent =
        userSession.data.study_year || "-";
      document.getElementById("faculty").textContent =
        userSession.data.faculty || "-";
      document.getElementById("department").textContent =
        userSession.data.department || "-";
    } else {
      document.getElementById("stud-year").parentElement.style.display = "none";
      document.getElementById("faculty").textContent =
        userSession.data.faculty || "-";
      document.getElementById("department").textContent =
        userSession.data.department || "-";
    }
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    window.location.href = "../../index.html";
  }
}

function convertToThaiTime(utcDate) {
  if (!utcDate) return "-";
  const date = new Date(utcDate);
  date.setHours(date.getHours() + 7);
  return date.toISOString().slice(0, 10);
}

function closeRejectModal() {
  document.getElementById("rejectModal").style.display = "none";
  document.getElementById("modalOverlay").style.display = "none";
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏ß‡∏¢ SweetAlert2
async function cancelBooking(requestId) {
  console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á requestId ‡πÑ‡∏õ‡∏ó‡∏µ‡πà API: ${requestId}`);
  const row = document.querySelector(`tr[data-id="${requestId}"]`);
  if (!row) return;
  const statusCell = row.querySelector(".status");
  const statusText = statusCell.textContent.trim();
  if (statusText !== "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" && statusText !== "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
    Swal.fire({
      icon: "error",
      title: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
    });
    return;
  }
  const result = await Swal.fire({
    title: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
    cancelButtonText: "‡πÑ‡∏°‡πà",
  });
  if (!result.isConfirmed) return;
  try {
    const response = await fetch(
      `${API_URL}/booker/cancelBooking/${requestId}`,
      {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
      }
    );
    const resultJson = await response.json();
    console.log("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", resultJson);
    if (!response.ok) throw new Error(resultJson.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ");
    statusCell.textContent = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á";
    statusCell.style.color = "red";
    row.querySelector("td:last-child").innerHTML = "-";
    if (window.loadedBookingData) {
      const bookingIndex = window.loadedBookingData.findIndex(
        (b) => b.room_request_id === requestId
      );
      if (bookingIndex !== -1) {
        window.loadedBookingData[bookingIndex].request_status = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á";
      }
    }
    Swal.fire({
      icon: "success",
      title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
      showConfirmButton: false,
      timer: 1500,
    });
  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ:", error);
    Swal.fire({
      icon: "error",
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
      text: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
    });
  }
}

async function fetchBrokenEquipments() {
  try {
    console.log("üîç ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API /getBrokenEquipments...");
    const response = await fetch(`${API_URL}/booker/getBrokenEquipments`, {
      method: "GET",
      credentials: "include",
    });
    if (!response.ok) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡πÑ‡∏î‡πâ");
    const brokenEquipments = await response.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", brokenEquipments);
    const tableBody = document.getElementById("repair-table-body");
    if (!tableBody) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element #repair-table-body");
      return;
    }
    tableBody.innerHTML = "";
    if (!Array.isArray(brokenEquipments) || brokenEquipments.length === 0) {
      console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á");
      tableBody.innerHTML = `<tr><td colspan="7" style="text-align: center;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</td></tr>`;
      return;
    }
    brokenEquipments.forEach((item, index) => {
      console.log(`üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 1}:`, item);
      const row = document.createElement("tr");

      // ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á repair_status
      let statusColor = "black"; // ‡∏™‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      if (item.repair_status === "‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°") {
        statusColor = "#FFBF00"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°
      } else if (item.repair_status === "‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß") {
        statusColor = "green"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
      } else if (item.repair_status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠") {
        statusColor = "orange"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠
      } else if (item.repair_status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°") {
        statusColor = "orange"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°
      } else if (item.repair_status === "‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à") {
        statusColor = "green"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      } else if (item.repair_status === "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ") {
        statusColor = "red"; // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ
      }

      row.innerHTML = `
        <td>${new Date(item.repair_date).toLocaleString("th-TH")}</td>
        <td>${item.equipment_name || "-"}</td>
        <td>${item.damage_details || "-"}</td>
        <td>SC2-${item.room_id || "-"}</td>
        <td>${item.Admin_Name || "-"}</td>
        <td class="status" style="color: ${statusColor}; font-weight: bold;">${
        item.repair_status || "-"
      }</td>
        <td>
            <button class="repair-detail-btn" onclick="showDetails(${index}, 'repair')">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</button>
        </td>
      `;
      tableBody.appendChild(row);
    });
    window.brokenEquipmentsData = brokenEquipments;
    console.log("‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
    setupReportTable(4, 5); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡∏≠‡∏≤‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î)
function showLargeImage(imageUrl) {
  if (!imageUrl) return;

  Swal.fire({
    imageUrl: imageUrl,
    imageAlt: "‡∏£‡∏π‡∏õ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ä‡∏≥‡∏£‡∏∏‡∏î",
    width: 800,
    showConfirmButton: false,
    showCloseButton: true,
    customClass: {
      image: "large-equipment-image",
    },
  });
}

function showDetails(index, type) {
  if (type === "repair") {
    const item = window.brokenEquipmentsData[index];
    console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", item);

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    let imageUrl = "";
    if (item.image_path) {
      // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetch ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
      fetch(`${API_URL}/booker/image/${item.image_path}`)
        .then((response) => response.blob())
        .then((blob) => {
          const objectUrl = URL.createObjectURL(blob);

          // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SweetAlert2 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          createAndShowDetailPopup(item, objectUrl);
        })
        .catch((error) => {
          console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ:", error);
          // ‡πÅ‡∏™‡∏î‡∏á popup ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          createAndShowDetailPopup(item, null);
        });
    } else {
      // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      createAndShowDetailPopup(item, null);
    }
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á popup ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
function createAndShowDetailPopup(item, imageUrl) {
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ã‡πà‡∏≠‡∏°
  let statusColor = "black";
  if (item.repair_status === "‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°") {
    statusColor = "#FFBF00";
  } else if (item.repair_status === "‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß") {
    statusColor = "green";
  } else if (
    item.repair_status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠" ||
    item.repair_status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°"
  ) {
    statusColor = "orange";
  } else if (item.repair_status === "‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à") {
    statusColor = "green";
  } else if (item.repair_status === "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ") {
    statusColor = "red";
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  let htmlContent = `
    <div class="repair-details-container">
      ${
        imageUrl
          ? `<div class="image-container">
              <img src="${imageUrl}" alt="‡∏£‡∏π‡∏õ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ä‡∏≥‡∏£‡∏∏‡∏î" class="repair-image">
              <div class="image-caption">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∏‡∏î</div>
            </div>`
          : `<div class="no-image-container">
              <div class="no-image-text">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</div>
            </div>`
      }
      
      <div class="details-section">
        <div class="detail-row">
          <div class="detail-label">üñ• ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</div>
          <div class="detail-value">${item.equipment_name || "-"}</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">üîç ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:</div>
          <div class="detail-value">${item.damage || "-"}</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">üîç ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</div>
          <div class="detail-value">${item.damage_details || "-"}</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">üìç ‡∏´‡πâ‡∏≠‡∏á:</div>
          <div class="detail-value">SC2-${item.room_id || "-"}</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</div>
          <div class="detail-value" style="color: ${statusColor}; font-weight: bold;">${
    item.repair_status || "-"
  }</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</div>
          <div class="detail-value">${
            item.Admin_Name || "‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°"
          }</div>
        </div>
        <div class="detail-row">
          <div class="detail-label">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</div>
          <div class="detail-value">${new Date(item.repair_date).toLocaleString(
            "th-TH"
          )}</div>
        </div>
      </div>
    </div>
  `;

  // ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 ‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á
  Swal.fire({
    title: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
    html: htmlContent,
    width: 800,
    confirmButtonText: "‡∏õ‡∏¥‡∏î",
    customClass: {
      popup: "my-swal-popup repair-popup",
      confirmButton: "btn btn-secondary",
    },
    buttonsStyling: false,
    showCloseButton: true,
  });
}

function formatDate(isoString) {
  if (!isoString) return "-";
  return isoString.split("T")[0];
}

async function fetchUserBookingData() {
  try {
    console.log("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...");
    const sessionResponse = await fetch(`${API_URL}/auth/session`, {
      credentials: "include",
    });
    if (!sessionResponse.ok)
      throw new Error("‚ùå ‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    const userSession = await sessionResponse.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:", userSession);
    const userId = userSession.data?.user_id;
    console.log("üéØ userId ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API:", userId);
    if (!userId) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user_id");

    const response = await fetch(`${API_URL}/booker/userBookings/${userId}`);
    if (!response.ok) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ");
    const bookings = await response.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", bookings);
    const tableBody = document.getElementById("booking-table-body");
    if (!tableBody) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element #booking-table-body");
      return;
    }
    tableBody.innerHTML = "";
    if (!Array.isArray(bookings) || bookings.length === 0) {
      console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
      tableBody.innerHTML = `<tr><td colspan="8" style="text-align: center; color: red;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</td></tr>`;
      return;
    }
    bookings.sort(
      (a, b) => new Date(b.Submitted_date) - new Date(a.Submitted_date)
    );
    window.loadedBookingData = bookings;
    bookings.forEach((booking) => {
      const row = document.createElement("tr");
      row.setAttribute("data-id", booking.room_request_id);
      setTimeout(() => {
        document.querySelectorAll(".status").forEach((statusCell) => {
          let statusText = statusCell.textContent.trim();
          if (statusText === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
            statusCell.style.color = "green";
          } else if (statusText === "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏") {
            statusCell.style.color = "gray";
          } else if (
            statusText === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ||
            statusText === "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
          ) {
            statusCell.style.color = "red";
          } else if (
            statusText === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ||
            statusText === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
          ) {
            statusCell.style.color = "orange";
          }
        });
      }, 1000);

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      let actionButtons = "";

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡πâ‡∏ß)
      const detailButton = `<button class="btn detail-btn btn-sm me-2" onclick="showBookingDetails(${booking.room_request_id})">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</button>`;

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
      if (
        booking.request_status === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" ||
        booking.request_status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
      ) {
        actionButtons =
          detailButton +
          `<button class="btn cancel-btn btn-sm" onclick="cancelBooking(${booking.room_request_id})">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</button>`;
      } else {
        actionButtons = detailButton;
      }

      row.innerHTML = `
        <td>${booking.request_type || "-"}</td>
        <td>${booking.room_name || "-"}</td>
        <td>${formatDate(booking.Submitted_date) || "-"}</td>
        <td>${formatDate(booking.Used_date) || "-"}</td>
        <td>${booking.start_time || "-"}</td>
        <td>${booking.end_time || "-"}</td>
        <td class="status">${booking.request_status || "-"}</td>
        <td>${actionButtons}</td>
      `;
      tableBody.appendChild(row);
    });
    setupBookingTable(4, 5);
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
    document.getElementById(
      "booking-table-body"
    ).innerHTML = `<tr><td colspan="8" style="text-align: center; color: red;">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>`;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
async function showBookingDetails(requestID) {
  try {
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
    const res = await fetch(`${API_URL}/booker/detailsPop`);
    if (!res.ok) throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");

    const data = await res.json();
    const booking = data.find((item) => item.requestID === requestID);

    if (!booking) {
      Swal.fire({
        icon: "error",
        title: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
        customClass: {
          popup: "my-swal-popup",
        },
      });
      return;
    }

    // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    const bookingRoomDetails = booking.detailbookingreason?.trim()
      ? booking.detailbookingreason
      : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•";

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏î‡∏¥‡∏°)
    const bookingData =
      window.loadedBookingData?.find((b) => b.room_request_id === requestID) ||
      {};
    const status = bookingData.request_status || "-";
    const utcDate = new Date(booking.datebooking);
    const thaiTimeBooking = utcDate
      .toLocaleString("th-TH", {
        timeZone: "Asia/Bangkok",
      })
      .split(" ")[0];

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SweetAlert2
    let htmlContent = `
      <div class="text-start">
        <p><strong>üìç ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</strong> ${booking.roombooking}</p>
        <p><strong>üïí ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á:</strong> ${`${thaiTimeBooking}, ${booking.timebooking}`}</p>
        <p><strong>üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> <span style="color: ${getStatusColor(
          status
        )};">${status}</span></p>
    `;

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if (bookingData.admin_name || bookingData.executive_name) {
      htmlContent += `<p><strong>üë§ ‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:</strong> ${
        bookingData.admin_name || bookingData.executive_name
      }</p>`;
    } else {
      htmlContent += `<p><strong>üë§ ‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:</strong> <i>‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</i></p>`;
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if (status === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" && bookingData.reject_reason) {
      htmlContent += `
        <p><strong>‚ùå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:</strong> ${
          bookingData.reject_reason || "-"
        }</p>
        <p><strong>üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ${
          bookingData.detail_reject_reason || "-"
        }</p>
      `;
    }

    htmlContent += `
        <hr/>
        <h6 class="fw-bold">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á</h6>
        <p><strong>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï / ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå:</strong> ${booking.id}</p>
        <p><strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> ${booking.name}</p>
        <p><strong>Email:</strong> ${booking.email}</p>
        <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</strong> ${booking.phone_number}</p>
        <p><strong>‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤:</strong> ${booking.department}</p>
        <hr/>
        <h6 class="fw-bold">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á‡∏£‡πà‡∏ß‡∏°</h6>
    `;

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏£‡πà‡∏ß‡∏°
    const participants = data.filter(
      (item) => item.requestID === requestID && item.role !== "‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÉ‡∏ä‡πâ"
    );

    if (participants.length > 0) {
      htmlContent += `
        <div class="table-responsive">
          <table class="table table-bordered table-sm" style="font-size: 14px;">
            <thead>
              <tr>
                <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                <th>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                <th>Email</th>
                <th>‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</th>
              </tr>
            </thead>
            <tbody>
      `;

      participants.forEach((p, i) => {
        htmlContent += `
          <tr>
            <td>${i + 1}</td>
            <td>${p.id}</td>
            <td>${p.name}</td>
            <td>${p.email}</td>
            <td>${p.department}</td>
          </tr>
        `;
      });

      htmlContent += `
            </tbody>
          </table>
        </div>
      `;
    } else {
      htmlContent += "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á‡∏£‡πà‡∏ß‡∏°</p>";
    }

    htmlContent += `
      <hr/>
      <p><strong>‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå:</strong> ${booking.bookingreason}</p>
      <p><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ${bookingRoomDetails}</p>
      </div>
    `;

    // ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 ‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á
    Swal.fire({
      title: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á",
      html: htmlContent,
      width: 700,
      confirmButtonText: "‡∏õ‡∏¥‡∏î",
      customClass: {
        popup: "my-swal-popup",
        confirmButton: "btn btn-secondary",
      },
      buttonsStyling: false,
      showCloseButton: true,
      heightAuto: false,
      backdrop: true,
    });
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    Swal.fire({
      icon: "error",
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
      text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ",
      confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
    });
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
function getStatusColor(statusText) {
  statusText = statusText.trim();
  if (statusText === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
    return "green";
  } else if (statusText === "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏") {
    return "gray";
  } else if (statusText === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" || statusText === "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á") {
    return "red";
  } else if (statusText === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" || statusText === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£") {
    return "orange";
  }
  return "black";
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
function setupBookingTable(initialVisible, increment) {
  let visibleRows = initialVisible;

  const loadMoreBtn = document.getElementById("load-more-btn-booking");
  const tableRows = document.querySelectorAll("#booking-table-body tr");

  function updateTable() {
    tableRows.forEach((row, index) => {
      row.style.display = index < visibleRows ? "table-row" : "none";
    });

    loadMoreBtn.style.display =
      visibleRows >= tableRows.length ? "none" : "block";
  }

  loadMoreBtn.addEventListener("click", function () {
    visibleRows += increment;
    updateTable();
  });

  updateTable(); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
function setupReportTable(initialVisible, increment) {
  let visibleRows = initialVisible;

  const loadMoreBtn = document.getElementById("load-more-btn-report");
  const tableRows = document.querySelectorAll("#repair-table-body tr");

  function updateTable() {
    tableRows.forEach((row, index) => {
      row.style.display = index < visibleRows ? "table-row" : "none";
    });

    loadMoreBtn.style.display =
      visibleRows >= tableRows.length ? "none" : "block";
  }

  loadMoreBtn.addEventListener("click", function () {
    visibleRows += increment;
    updateTable();
  });

  updateTable(); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å
}

document.addEventListener("DOMContentLoaded", function () {
  fetchUserBookingData();
  fetchUserInfo();
  fetchBrokenEquipments();

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
  document.addEventListener("click", function (event) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (event.target.classList.contains("image-preview")) {
      // ‡∏´‡∏≤ index ‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å
      const row = event.target.closest("tr");
      const index = Array.from(row.parentNode.children).indexOf(row);
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      showDetails(index, "repair");
    }
  });
  const style = document.createElement("style");
  style.textContent = `
    .large-equipment-image {
      max-width: 100%;
      max-height: 80vh;
      object-fit: contain;
    }
  `;
  document.head.appendChild(style);
});
